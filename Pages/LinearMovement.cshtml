@page
@model CncGcodeSimulator.Pages.LinearMovementModel

<h1>Линейные перемещения (G0/G1)</h1>

<form method="post">
    <textarea asp-for="UserGCode" rows="15" placeholder="Вставьте сюда G-код с G0/G1..."></textarea><br />
    <button type="submit">▶️ Запустить</button>
</form>

<div style="width:500px; height:500px; border:1px solid #ccc; position:relative;">
    <canvas id="canvas" width="500" height="500" style="position:absolute; left:0; top:0; background-color: white;"></canvas>
</div>

@section Scripts {
    <script>
        const points = @Html.Raw(Model.PointsJson);
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');

        const gridSize = 25;
        const centerX = canvas.width / 2;
        const centerY = canvas.height / 2;

        function drawGrid() {
            ctx.strokeStyle = '#eee';
            ctx.lineWidth = 1;
            for(let x=0; x <= canvas.width; x += gridSize) {
                ctx.beginPath();
                ctx.moveTo(x, 0);
                ctx.lineTo(x, canvas.height);
                ctx.stroke();
            }
            for(let y=0; y <= canvas.height; y += gridSize) {
                ctx.beginPath();
                ctx.moveTo(0, y);
                ctx.lineTo(canvas.width, y);
                ctx.stroke();
            }
        }

        function drawAxes() {
            ctx.strokeStyle = 'rgba(255,0,0,0.5)';
            ctx.lineWidth = 2;
            ctx.beginPath();
            ctx.moveTo(centerX, 0);
            ctx.lineTo(centerX, canvas.height);
            ctx.stroke();

            ctx.strokeStyle = 'rgba(0,0,255,0.5)';
            ctx.lineWidth = 2;
            ctx.beginPath();
            ctx.moveTo(0, centerY);
            ctx.lineTo(canvas.width, centerY);
            ctx.stroke();

            ctx.fillStyle = 'rgba(0,0,255,0.7)';
            ctx.font = 'bold 14px Arial';
            ctx.fillText('X', canvas.width - 20, centerY - 5);

            ctx.fillStyle = 'rgba(255,0,0,0.7)';
            ctx.font = 'bold 14px Arial';
            ctx.fillText('Y', centerX + 5, 20);
        }

        function drawCoordinatesLabels() {
            ctx.fillStyle = '#666';
            ctx.font = '10px Arial';
            ctx.textAlign = 'center';
            ctx.textBaseline = 'top';

            for(let x = centerX + gridSize, i = 1; x < canvas.width; x += gridSize, i++) {
                ctx.fillText(i * gridSize, x, centerY + 2);
            }
            for(let x = centerX - gridSize, i = -1; x > 0; x -= gridSize, i--) {
                ctx.fillText(i * gridSize, x, centerY + 2);
            }

            ctx.textAlign = 'right';
            ctx.textBaseline = 'middle';

            for(let y = centerY - gridSize, i = 1; y > 0; y -= gridSize, i++) {
                ctx.fillText(i * gridSize, centerX - 5, y);
            }
            for(let y = centerY + gridSize, i = -1; y < canvas.height; y += gridSize, i--) {
                ctx.fillText(i * gridSize, centerX - 5, y);
            }
        }

        function drawZeroPoint() {
            ctx.beginPath();
            ctx.arc(centerX, centerY, 4, 0, 2 * Math.PI);
            ctx.fillStyle = "red";
            ctx.fill();
        }

        function drawPath(points) {
            if(points.length === 0) return;
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            drawGrid();
            drawAxes();
            drawCoordinatesLabels();
            drawZeroPoint();

            ctx.lineWidth = 2;
            ctx.strokeStyle = 'black';

            for(let i=1; i < points.length; i++) {
                ctx.beginPath();
                ctx.moveTo(points[i-1].x, points[i-1].y);
                ctx.lineTo(points[i].x, points[i].y);
                ctx.stroke();
            }
        }

        drawPath(points);
    </script>
}
